#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–µ–Ω–¥–∏–Ω–≥–∞
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
"""

import time
import asyncio
from playwright.async_api import async_playwright
import sys

async def simple_test():
    """–ü—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–µ–Ω–¥–∏–Ω–≥–∞"""
    
    async with async_playwright() as p:
        browser = await p.chromium.launch(headless=False, slow_mo=1000)
        page = await browser.new_page()
        
        try:
            print("üöÄ –ü—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–µ–Ω–¥–∏–Ω–≥–∞...")
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –ª–µ–Ω–¥–∏–Ω–≥
            await page.goto("http://localhost:8000")
            await page.wait_for_load_state("networkidle")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
            title = await page.title()
            print(f"‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫: {title}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
            print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã...")
            
            # –ù–∞–≤–∏–≥–∞—Ü–∏—è
            nav_links = await page.query_selector_all(".nav-link")
            print(f"‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è: {len(nav_links)} —Å—Å—ã–ª–æ–∫")
            
            # –ì–µ—Ä–æ–π —Å–µ–∫—Ü–∏—è
            hero_title = await page.query_selector(".hero-title")
            if hero_title:
                print("‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≥–µ—Ä–æ—è –Ω–∞–π–¥–µ–Ω")
            
            # –§–æ—Ä–º–∞
            form = await page.query_selector("#earlyAccessForm")
            if form:
                print("‚úÖ –§–æ—Ä–º–∞ —Ä–∞–Ω–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞–π–¥–µ–Ω–∞")
                
                # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ
                name_input = await page.query_selector("#userName")
                phone_input = await page.query_selector("#userPhone")
                
                if name_input and phone_input:
                    await name_input.fill("–¢–µ—Å—Ç")
                    await phone_input.fill("+82-10-1234-5678")
                    print("‚úÖ –§–æ—Ä–º–∞ –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            
            # –ë–∏–ª–µ—Ç—ã
            ticket_cards = await page.query_selector_all(".ticket-card")
            print(f"‚úÖ –ë–∏–ª–µ—Ç—ã: {len(ticket_cards)} —Ç–∏–ø–æ–≤")
            
            # –ì–∞–ª–µ—Ä–µ—è
            gallery_images = await page.query_selector_all(".gallery-img")
            print(f"‚úÖ –ì–∞–ª–µ—Ä–µ—è: {len(gallery_images)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
            
            # –°—á–µ—Ç—á–∏–∫
            countdown_elements = await page.query_selector_all(".countdown-number")
            print(f"‚úÖ –°—á–µ—Ç—á–∏–∫: {len(countdown_elements)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
            print("\nüß≠ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é...")
            
            # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–µ–∫—Ü–∏–∏ "–û –∫–æ–Ω—Ü–µ—Ä—Ç–µ"
            about_link = await page.query_selector('a[href="#about"]')
            if about_link:
                await about_link.click()
                await page.wait_for_timeout(1000)
                print("‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –∫ '–û –∫–æ–Ω—Ü–µ—Ä—Ç–µ'")
            
            # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–µ–∫—Ü–∏–∏ "–ë–∏–ª–µ—Ç—ã"
            tickets_link = await page.query_selector('a[href="#tickets"]')
            if tickets_link:
                await tickets_link.click()
                await page.wait_for_timeout(1000)
                print("‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –∫ '–ë–∏–ª–µ—Ç—ã'")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
            print("\nüéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏...")
            
            notify_btn = await page.query_selector("#notifyBtn")
            if notify_btn:
                await notify_btn.click()
                await page.wait_for_timeout(1000)
                print("‚úÖ –ö–Ω–æ–ø–∫–∞ '–£–≤–µ–¥–æ–º–∏—Ç—å' —Ä–∞–±–æ—Ç–∞–µ—Ç")
            
            scroll_btn = await page.query_selector("#scrollBtn")
            if scroll_btn:
                await scroll_btn.click()
                await page.wait_for_timeout(1000)
                print("‚úÖ –ö–Ω–æ–ø–∫–∞ '–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ' —Ä–∞–±–æ—Ç–∞–µ—Ç")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é
            print("\nüì± –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é...")
            await page.set_viewport_size({"width": 375, "height": 667})
            await page.wait_for_timeout(1000)
            
            hamburger = await page.query_selector(".hamburger")
            if hamburger:
                await hamburger.click()
                await page.wait_for_timeout(1000)
                print("‚úÖ –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é —Ä–∞–±–æ—Ç–∞–µ—Ç")
            
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –¥–µ—Å–∫—Ç–æ–ø—É
            await page.set_viewport_size({"width": 1920, "height": 1080})
            await page.wait_for_timeout(1000)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
            print("\n‚ö° –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å...")
            
            metrics = await page.evaluate("""
                () => {
                    const nav = performance.getEntriesByType('navigation')[0];
                    return {
                        loadTime: nav.loadEventEnd - nav.loadEventStart,
                        totalTime: nav.loadEventEnd - nav.fetchStart
                    };
                }
            """)
            
            print(f"‚úÖ –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏: {metrics['loadTime']:.2f}ms")
            print(f"‚úÖ –û–±—â–µ–µ –≤—Ä–µ–º—è: {metrics['totalTime']:.2f}ms")
            
            # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
            await page.screenshot(path="/home/zebracoder/projects/Dominic/final_screenshot.png", full_page=True)
            print("‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
            
            print("\nüéâ –ü—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            return False
        
        finally:
            await browser.close()

if __name__ == "__main__":
    print("üé≠ –ü—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–µ–Ω–¥–∏–Ω–≥–∞ –î–æ–º–∏–Ω–∏–∫–∞ –î–∂–æ–∫–µ—Ä–∞")
    print("=" * 50)
    
    try:
        result = asyncio.run(simple_test())
        if result:
            print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã!")
            sys.exit(0)
        else:
            print("\n‚ùå –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")
            sys.exit(1)
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è  –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ")
        sys.exit(1)
    except Exception as e:
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)
