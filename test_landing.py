#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª–µ–Ω–¥–∏–Ω–≥–∞ –î–æ–º–∏–Ω–∏–∫–∞ –î–∂–æ–∫–µ—Ä–∞
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
"""

import time
import asyncio
from playwright.async_api import async_playwright
import sys

async def test_landing():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª–µ–Ω–¥–∏–Ω–≥–∞"""
    
    async with async_playwright() as p:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
        browser = await p.chromium.launch(headless=False, slow_mo=1000)
        page = await browser.new_page()
        
        try:
            print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª–µ–Ω–¥–∏–Ω–≥–∞...")
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –ª–µ–Ω–¥–∏–Ω–≥
            print("üì± –û—Ç–∫—Ä—ã–≤–∞–µ–º –ª–µ–Ω–¥–∏–Ω–≥...")
            await page.goto("http://localhost:8000")
            await page.wait_for_load_state("networkidle")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            title = await page.title()
            print(f"‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {title}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
            print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
            nav_elements = await page.query_selector_all(".nav-link")
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(nav_elements)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≥–µ—Ä–æ—è
            hero_title = await page.query_selector(".hero-title")
            if hero_title:
                title_text = await hero_title.text_content()
                print(f"‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≥–µ—Ä–æ—è: {title_text.strip()}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º—É —Ä–∞–Ω–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞
            form = await page.query_selector("#earlyAccessForm")
            if form:
                print("‚úÖ –§–æ—Ä–º–∞ —Ä–∞–Ω–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞–π–¥–µ–Ω–∞")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—è —Ñ–æ—Ä–º—ã
                name_input = await page.query_selector("#userName")
                phone_input = await page.query_selector("#userPhone")
                
                if name_input and phone_input:
                    print("‚úÖ –ü–æ–ª—è —Ñ–æ—Ä–º—ã –Ω–∞–π–¥–µ–Ω—ã")
                    
                    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã
                    print("üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã...")
                    await name_input.fill("–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
                    await phone_input.fill("+82-10-1234-5678")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏
                    submit_btn = await page.query_selector(".access-btn")
                    if submit_btn:
                        print("‚úÖ –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–π–¥–µ–Ω–∞")
                        # –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º
                        print("‚ÑπÔ∏è  –§–æ—Ä–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ–∫—Ü–∏—é –±–∏–ª–µ—Ç–æ–≤
            print("\nüé´ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ–∫—Ü–∏—é –±–∏–ª–µ—Ç–æ–≤...")
            ticket_cards = await page.query_selector_all(".ticket-card")
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(ticket_cards)} —Ç–∏–ø–æ–≤ –±–∏–ª–µ—Ç–æ–≤")
            
            for i, card in enumerate(ticket_cards):
                price_element = await card.query_selector(".ticket-price")
                if price_element:
                    price = await price_element.text_content()
                    print(f"  - –ë–∏–ª–µ—Ç {i+1}: {price}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–∞–ª–µ—Ä–µ—é –∞—Ä—Ç–∏—Å—Ç–∞
            print("\nüñºÔ∏è  –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–∞–ª–µ—Ä–µ—é –∞—Ä—Ç–∏—Å—Ç–∞...")
            gallery_images = await page.query_selector_all(".gallery-img")
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(gallery_images)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –≥–∞–ª–µ—Ä–µ–µ")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—á–µ—Ç—á–∏–∫ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞
            print("\n‚è∞ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—á–µ—Ç—á–∏–∫ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞...")
            countdown_elements = await page.query_selector_all(".countdown-number")
            if countdown_elements:
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(countdown_elements)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—á–µ—Ç—á–∏–∫–∞")
                for i, element in enumerate(countdown_elements):
                    value = await element.text_content()
                    print(f"  - –≠–ª–µ–º–µ–Ω—Ç {i+1}: {value}")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
            print("\nüß≠ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é...")
            about_link = await page.query_selector('a[href="#about"]')
            if about_link:
                await about_link.click()
                await page.wait_for_timeout(1000)
                print("‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–µ–∫—Ü–∏–∏ '–û –∫–æ–Ω—Ü–µ—Ä—Ç–µ' –≤—ã–ø–æ–ª–Ω–µ–Ω")
            
            tickets_link = await page.query_selector('a[href="#tickets"]')
            if tickets_link:
                await tickets_link.click()
                await page.wait_for_timeout(1000)
                print("‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–µ–∫—Ü–∏–∏ '–ë–∏–ª–µ—Ç—ã' –≤—ã–ø–æ–ª–Ω–µ–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å (–º–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)
            print("\nüì± –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é...")
            await page.set_viewport_size({"width": 375, "height": 667})
            await page.wait_for_timeout(1000)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–∞–º–±—É—Ä–≥–µ—Ä –º–µ–Ω—é
            hamburger = await page.query_selector(".hamburger")
            if hamburger:
                await hamburger.click()
                await page.wait_for_timeout(1000)
                print("‚úÖ –ì–∞–º–±—É—Ä–≥–µ—Ä –º–µ–Ω—é —Ä–∞–±–æ—Ç–∞–µ—Ç")
            
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –¥–µ—Å–∫—Ç–æ–ø–Ω–æ–π –≤–µ—Ä—Å–∏–∏
            await page.set_viewport_size({"width": 1920, "height": 1080})
            await page.wait_for_timeout(1000)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
            print("\nüéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π...")
            notify_btn = await page.query_selector("#notifyBtn")
            if notify_btn:
                await notify_btn.click()
                await page.wait_for_timeout(1000)
                print("‚úÖ –ö–Ω–æ–ø–∫–∞ '–£–≤–µ–¥–æ–º–∏—Ç—å –æ –ø—Ä–æ–¥–∞–∂–∞—Ö' —Ä–∞–±–æ—Ç–∞–µ—Ç")
            
            scroll_btn = await page.query_selector("#scrollBtn")
            if scroll_btn:
                await scroll_btn.click()
                await page.wait_for_timeout(1000)
                print("‚úÖ –ö–Ω–æ–ø–∫–∞ '–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ' —Ä–∞–±–æ—Ç–∞–µ—Ç")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
            print("\n‚ö° –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å...")
            performance_metrics = await page.evaluate("""
                () => {
                    const navigation = performance.getEntriesByType('navigation')[0];
                    return {
                        loadTime: navigation.loadEventEnd - navigation.loadEventStart,
                        domContentLoaded: navigation.domContentLoadedEventEnd - navigation.domContentLoadedEventStart,
                        totalTime: navigation.loadEventEnd - navigation.fetchStart
                    };
                }
            """)
            
            print(f"‚úÖ –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ DOM: {performance_metrics['domContentLoaded']:.2f}ms")
            print(f"‚úÖ –í—Ä–µ–º—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏: {performance_metrics['loadTime']:.2f}ms")
            print(f"‚úÖ –û–±—â–µ–µ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏: {performance_metrics['totalTime']:.2f}ms")
            
            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
            print("\nüì∏ –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç...")
            await page.screenshot(path="/home/zebracoder/projects/Dominic/landing_screenshot.png", full_page=True)
            print("‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ landing_screenshot.png")
            
            print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
            print("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
            print("‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–π–¥–µ–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç")
            print("‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            print("‚úÖ –§–æ—Ä–º–∞ —Ä–∞–Ω–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
            print("‚úÖ –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç (–º–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)")
            print("‚úÖ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –Ω–æ—Ä–º–µ")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
            return False
        
        finally:
            await browser.close()
            return True

if __name__ == "__main__":
    print("üé≠ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–µ–Ω–¥–∏–Ω–≥–∞ –î–æ–º–∏–Ω–∏–∫–∞ –î–∂–æ–∫–µ—Ä–∞")
    print("=" * 50)
    
    try:
        result = asyncio.run(test_landing())
        if result:
            print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            sys.exit(0)
        else:
            print("\n‚ùå –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")
            sys.exit(1)
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è  –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(1)
    except Exception as e:
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)
